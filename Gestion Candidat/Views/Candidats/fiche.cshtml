@model Gestion_Candidat.Models.Candidat

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Candidat</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CdCandidat)

        <div class="form-group">
            @Html.LabelFor(model => model.CdHumain, "CdHumain", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CdHumain", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CdHumain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DtDisponibilite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DtDisponibilite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DtDisponibilite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LbDisponibilite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LbDisponibilite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LbDisponibilite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remuneration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remuneration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remuneration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobilite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobilite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobilite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypAction, "TypAction", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypAction", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypAction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypPriorite, "TypPriorite", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypPriorite", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypPriorite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypOrigine, "TypOrigine", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypOrigine", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypOrigine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypStatut, "TypStatut", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypStatut", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypStatut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InfCom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InfCom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InfCom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCEntreprise, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MCEntreprise, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MCEntreprise, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCFonctionnel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MCFonctionnel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MCFonctionnel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCTechnique, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MCTechnique, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MCTechnique, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DtCreation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DtCreation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DtCreation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreePar, "CreePar", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CreePar", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreePar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DtModification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DtModification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DtModification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiePar, "ModifiePar", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ModifiePar", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModifiePar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
